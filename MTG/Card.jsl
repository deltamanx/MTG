package MTG;
import java.awt.*;

/**
 * Summary description for Card.
 */
public class Card
{
	//BLACK = 4,
	//WHITE = 5,
	//BLUE = 2,
	//RED = 1,
	//GREEN = 3,
	//ARTIFACT = 6,
	//ANY = 0,
	//NONE = -1
	private CardColor cardCol = CardColor.NONE;
	//-1 = NONE,
	//1 = Monster,
	//2 = Sorcery,
	//3 = Instant,
	//4 = Land
	private Type cardType = Type.NONE;

	//Card Texts
	private String cardName = null;
	private String cardText = null;

	//Card cost
	private CardColor manaType1 = CardColor.NONE;
	private int manaCost1 = 0;
	private CardColor manaType2 = CardColor.NONE;
	private int manaCost2 = 0;

	enum CardColor
	{
		RED(1),
		BLUE(2),
		GREEN(3),
		BLACK(4),
		WHITE(5),
		ARTIFACT(6),
		COLORLESS(7),
		ANY(0),
		NONE(-1);
	}

	enum Type
	{
		MONSTER(1),
		SORCERY(2),
		INSTANT(3),
		LAND(4),
		NONE(-1);
	}

	enum SubType
	{
		NEGATE(1),
		DAMAGE(2),
		BUFF(3),
		DEBUFF(4),
		TAP(5),
		DESTROY(6),
		OTHER(7);
	}

	public Card()
	{
	}

	public Card(String name, Type type, CardColor color)
	{
		cardName = name;
		cardType = type;
		cardCol = color;
	}

	//Method
	public static CardColor getColorByName(String color)
	{
		if (CardColor.ANY.toString().equalsIgnoreCase(color))
			return CardColor.ANY;
		else if (CardColor.RED.toString().equalsIgnoreCase(color))
			return CardColor.RED;
		else if (CardColor.BLUE.toString().equalsIgnoreCase(color))
			return CardColor.ANY;
		else if (CardColor.BLUE.toString().equalsIgnoreCase(color))
			return CardColor.ANY;
		else if (CardColor.GREEN.toString().equalsIgnoreCase(color))
			return CardColor.GREEN;
		else if (CardColor.ARTIFACT.toString().equalsIgnoreCase(color))
			return CardColor.ARTIFACT;
		if (CardColor.WHITE.toString().equalsIgnoreCase(color))
			return CardColor.WHITE;
		if (CardColor.BLACK.toString().equalsIgnoreCase(color))
			return CardColor.BLACK;
		else
			return CardColor.NONE;
	}

	//Set get pairs

	//Name
	public String getName()
	{
		return cardName;
	}
	protected void setName(String name)
	{
		cardName = name;
	}

	//Type
	public Type getType()
	{
		return cardType;
	}
	protected void setType(Type type)
	{
		cardType = type;

	}

	//Color
	public CardColor getColor()
	{
		return cardCol;
	}
	protected void setColor(CardColor color)
	{
		cardCol = color;
	}

	//Text
	public String getCardText()
	{
		return cardText;
	}
	protected void setCardText(String text)
	{
		cardText = text;
	}

	//Mana Cost #1
	protected void setManaType1(CardColor color)
	{
		manaType1 = color;
	}
	protected void setManaCost1(int cost)
	{
		manaCost1 = cost;
	}
	public CardColor getManaType1()
	{
		return manaType1;
	}
	public int getManaCost1()
	{
		return manaCost1;
	}

	//Mana Cost #2
	protected void setManaType2(CardColor color)
	{
		manaType2 = color;
	}
	protected void setManaCost2(int cost)
	{
		manaCost2 = cost;
	}
	public CardColor getManaType2()
	{
		return manaType2;
	}
	public int getManaCost2()
	{
		return manaCost2;
	}
}
